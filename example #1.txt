Example #1.

This example contains minimum of code to demonstrate testing consept. Before running scripts, make sure that you have privileges to execute hamlet package.

grant execute on hamlet.hamlet to <username>;

First of all, function to be tested. Let's take simple function - increment. 

Code:

create or replace function incr(num integer) return number is
begin
  return num + 1;
end;
/

grant execute on incr to hamlet;

Now we need to create a testsuite for this function:

declare
  params hamlet.hamlet.param_list;
begin
  -- here we create a testsuite and test scripts:
  hamlet.hamlet.create_test(
    p_owner => user, 
    p_package => '', 
    p_procedure => 'INCR',
    p_testsuite_description => 'One simple testsuite', 
    p_include_in_package => 0);

  -- here we prepare a list of test parameters:
  params(1).param_name := 'NUM';
  params(1).param_type := hamlet.hamlet.PR_IN;
  params(1).num_value := 1;
  params(2).param_name := 'RESULT';
  params(2).param_type := hamlet.hamlet.PR_EXP;
  params(2).num_value := 2;
  
  -- here we create a testcase with prepared parameters:
  hamlet.hamlet.add_testcase(
    p_owner => user, 
    p_package => '', 
    p_procedure => 'INCR',
    p_test_case_description => 'One simple testcase', 
    p_parameters => params); 
end;
/

Now we can run test:

begin
  hamlet.hamlet.run_testsuite(
    p_owner => user, 
    p_package => '', 
    p_procedure => 'INCR');
end;
/

SQL> begin
  hamlet.hamlet.run_testsuite(
    p_owner => user, 
    p_package => '', 
    p_procedure => 'INCR');
end;
/
Test is successfully passed!

PL/SQL procedure successfully completed.

As we can se, our test is successfully passed. Congratulations!
